/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.notesmanagement.views;

import com.mycompany.notesmanagement.models.Database;
import com.mycompany.notesmanagement.controllers.DatabaseConnector;
import com.mycompany.notesmanagement.dialogs.DatabaseError;
import com.mycompany.notesmanagement.models.User;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.JTextComponent;

/**
 *
 * @author Regine Torremoro
 */
public class SignUpFirstLevel extends javax.swing.JFrame {

    private final DatabaseConnector database;

    /**
     * Creates new form SignUpFirstLevel
     */
    public SignUpFirstLevel() {
        initComponents();

        database = new DatabaseConnector();

        setLocationRelativeTo(null);

        Border border = BorderFactory.createLineBorder(new Color(0, 31, 63), 2, true);

        emailInput.setBorder(border);
        passwordInput.setBorder(border);

        emailErrorLabel.setVisible(false);
        passwordErrorLabel.setVisible(false);

        attachDocumentListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        logoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tagline = new javax.swing.JLabel();
        inputPanel = new javax.swing.JPanel();
        emailInputLabel = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();
        passwordInputLabel = new javax.swing.JLabel();
        passwordInput = new javax.swing.JPasswordField();
        emailErrorLabel = new javax.swing.JLabel();
        passwordErrorLabel = new javax.swing.JLabel();
        loginInstruction = new javax.swing.JLabel();
        signUpButton = new javax.swing.JButton();
        loginPanel = new javax.swing.JPanel();
        haveAnAccountText = new javax.swing.JLabel();
        loginRedirection = new javax.swing.JLabel();
        backgroundPanel = new javax.swing.JPanel();
        backgroundImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Note Forge - Sign Up");
        setName("mainFrame"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        mainPanel.setOpaque(false);
        mainPanel.setLayout(new java.awt.GridBagLayout());

        logoPanel.setOpaque(false);
        logoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        logoPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        mainPanel.add(logoPanel, new java.awt.GridBagConstraints());

        tagline.setFont(new java.awt.Font("Poppins", 1, 13)); // NOI18N
        tagline.setForeground(new java.awt.Color(0, 31, 63));
        tagline.setText("Forge Your Ideas, Organize Your Thoughts");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        mainPanel.add(tagline, gridBagConstraints);

        inputPanel.setOpaque(false);
        inputPanel.setPreferredSize(new java.awt.Dimension(200, 110));
        inputPanel.setLayout(new java.awt.GridBagLayout());

        emailInputLabel.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        emailInputLabel.setForeground(new java.awt.Color(0, 31, 63));
        emailInputLabel.setText("Email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        inputPanel.add(emailInputLabel, gridBagConstraints);

        emailInput.setBackground(java.awt.Color.white);
        emailInput.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        emailInput.setForeground(java.awt.Color.black);
        emailInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 31, 63), 2, true));
        emailInput.setPreferredSize(new java.awt.Dimension(64, 30));
        emailInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailInputKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 136;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        inputPanel.add(emailInput, gridBagConstraints);

        passwordInputLabel.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        passwordInputLabel.setForeground(new java.awt.Color(0, 31, 63));
        passwordInputLabel.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        inputPanel.add(passwordInputLabel, gridBagConstraints);

        passwordInput.setBackground(java.awt.Color.white);
        passwordInput.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        passwordInput.setForeground(java.awt.Color.black);
        passwordInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 31, 63), 2, true));
        passwordInput.setMinimumSize(new java.awt.Dimension(64, 30));
        passwordInput.setPreferredSize(new java.awt.Dimension(64, 30));
        passwordInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordInputKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 136;
        inputPanel.add(passwordInput, gridBagConstraints);

        emailErrorLabel.setFont(new java.awt.Font("Poppins", 0, 9)); // NOI18N
        emailErrorLabel.setForeground(java.awt.Color.red);
        emailErrorLabel.setText("Please enter your email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        inputPanel.add(emailErrorLabel, gridBagConstraints);

        passwordErrorLabel.setFont(new java.awt.Font("Poppins", 0, 9)); // NOI18N
        passwordErrorLabel.setForeground(java.awt.Color.red);
        passwordErrorLabel.setText("Please enter a password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        inputPanel.add(passwordErrorLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        mainPanel.add(inputPanel, gridBagConstraints);

        loginInstruction.setFont(new java.awt.Font("Poppins", 0, 11)); // NOI18N
        loginInstruction.setForeground(new java.awt.Color(0, 31, 63));
        loginInstruction.setText("To continue using the app, please sign up first");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        mainPanel.add(loginInstruction, gridBagConstraints);

        signUpButton.setBackground(new java.awt.Color(0, 31, 63));
        signUpButton.setFont(new java.awt.Font("Poppins Black", 0, 10)); // NOI18N
        signUpButton.setForeground(java.awt.Color.white);
        signUpButton.setText("Continue");
        signUpButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        signUpButton.setPreferredSize(new java.awt.Dimension(200, 30));
        signUpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                signUpButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signUpButtonMouseExited(evt);
            }
        });
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        mainPanel.add(signUpButton, gridBagConstraints);

        loginPanel.setOpaque(false);
        loginPanel.setPreferredSize(new java.awt.Dimension(200, 40));
        loginPanel.setLayout(new java.awt.GridBagLayout());

        haveAnAccountText.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        haveAnAccountText.setForeground(new java.awt.Color(0, 31, 63));
        haveAnAccountText.setText("Already have an account?");
        loginPanel.add(haveAnAccountText, new java.awt.GridBagConstraints());

        loginRedirection.setFont(new java.awt.Font("Poppins", 1, 10)); // NOI18N
        loginRedirection.setForeground(new java.awt.Color(0, 31, 63));
        loginRedirection.setText("Log in");
        loginRedirection.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginRedirection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redirectToLogin(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginRedirectionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginRedirectionMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        loginPanel.add(loginRedirection, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        mainPanel.add(loginPanel, gridBagConstraints);

        getContentPane().add(mainPanel);

        backgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg.jpg"))); // NOI18N

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addComponent(backgroundImage)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addComponent(backgroundImage)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(backgroundPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
        // TODO add your handling code here:
        proceedToDestination();
    }//GEN-LAST:event_signUpButtonActionPerformed

    private void redirectToLogin(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectToLogin
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_redirectToLogin

    private void emailInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            proceedToDestination();
        }
    }//GEN-LAST:event_emailInputKeyPressed

    private void passwordInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            proceedToDestination();
        }
    }//GEN-LAST:event_passwordInputKeyPressed

    private void signUpButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUpButtonMouseEntered
        // TODO add your handling code here:
        signUpButton.setBackground(new Color(1, 11, 43));
    }//GEN-LAST:event_signUpButtonMouseEntered

    private void signUpButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUpButtonMouseExited
        // TODO add your handling code here:
        signUpButton.setBackground(new Color(1, 31, 63));
    }//GEN-LAST:event_signUpButtonMouseExited

    private void loginRedirectionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginRedirectionMouseEntered
        // TODO add your handling code here:
        loginRedirection.setForeground(new Color(70, 130, 180));
    }//GEN-LAST:event_loginRedirectionMouseEntered

    private void loginRedirectionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginRedirectionMouseExited
        // TODO add your handling code here:
        loginRedirection.setForeground(new Color(1, 31, 63));
    }//GEN-LAST:event_loginRedirectionMouseExited

    public static boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        Pattern pattern = Pattern.compile(emailRegex);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    private void updateBorderColor(JTextComponent component, boolean isError) {

        Border border;
        if (isError) {
            border = BorderFactory.createLineBorder(Color.RED, 2, true);
        } else {
            border = BorderFactory.createLineBorder(new Color(0, 31, 63), 2, true);
        }

        component.setBorder(border);

    }

    private void attachDocumentListeners() {
        emailInput.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                areFieldsValidated();
            }
        });

        passwordInput.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                areFieldsValidated();
            }
        });

    }

    private boolean areFieldsValidated() {
        String email = emailInput.getText();
        String password = new String(passwordInput.getPassword());

        boolean emailValid = true;
        boolean passwordValid = true;
        String passwordErrorMessage = "";

        if (!isValidEmail(email)) {
            emailValid = false;
            emailErrorLabel.setVisible(true);
            emailErrorLabel.setText("Invalid email format");
        } else {
            emailErrorLabel.setVisible(false);
        }

        if (email.isEmpty()) {
            emailValid = false;
            emailErrorLabel.setVisible(true);
            emailErrorLabel.setText("Please enter your email");
        }

        if (isEmailUsed(email)) {
            emailValid = false;
            emailErrorLabel.setVisible(true);
            emailErrorLabel.setText("Email already taken");
        }

        if (password.isEmpty()) {
            passwordValid = false;
            passwordErrorMessage = "Please enter a password";
        } else if (password.length() < 8) {
            passwordValid = false;
            passwordErrorMessage = "8 characters minimum";
        } else if (!password.matches(".*[A-Z].*")) {
            passwordValid = false;
            passwordErrorMessage = "At least one uppercase";
        } else if (!password.matches(".*[a-z].*")) {
            passwordValid = false;
            passwordErrorMessage = "At least one lowercase";
        } else if (!password.matches(".*\\d.*")) {
            passwordValid = false;
            passwordErrorMessage = "At least one digit";
        }

        passwordErrorLabel.setVisible(!passwordValid);
        passwordErrorLabel.setText(passwordErrorMessage);

        updateBorderColor(emailInput, !emailValid);
        updateBorderColor(passwordInput, !passwordValid);

        return emailValid && passwordValid;
    }

    private boolean isEmailUsed(String email) {

        PreparedStatement statement = null;
        ResultSet resultSet = null;

        try {
            database.connect();
            String query = "SELECT COUNT(*) FROM users WHERE user_email = ?";
            statement = database.getConnection().prepareStatement(query);
            statement.setString(1, email);
            resultSet = statement.executeQuery();

            if (resultSet.next()) {
                int count = resultSet.getInt(1);
                if (count > 0) {
                    return true;
                }
            }

        } catch (SQLException e) {
            new DatabaseError().setVisible(true);
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }
                database.close();
            } catch (SQLException ex) {
                new DatabaseError().setVisible(true);
            }
        }

        return false;

    }

    public User sendDataToNextForm() {
        String email = emailInput.getText();
        String password = new String(passwordInput.getPassword());

        User user = new User();
        user.setEmail(email);
        user.setPassword(password);
        
        return user;
    }

    private void proceedToDestination() {
        if (areFieldsValidated()) {
            SignUpSecondLevel userCredentials = new SignUpSecondLevel(sendDataToNextForm());
            userCredentials.setVisible(true);
            this.dispose();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpFirstLevel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpFirstLevel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpFirstLevel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpFirstLevel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUpFirstLevel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JLabel emailErrorLabel;
    private javax.swing.JTextField emailInput;
    private javax.swing.JLabel emailInputLabel;
    private javax.swing.JLabel haveAnAccountText;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel loginInstruction;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JLabel loginRedirection;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel passwordErrorLabel;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JLabel passwordInputLabel;
    private javax.swing.JButton signUpButton;
    private javax.swing.JLabel tagline;
    // End of variables declaration//GEN-END:variables
}
