/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.notesmanagement.views;

import com.mycompany.notesmanagement.controllers.DatabaseConnector;
import com.mycompany.notesmanagement.controllers.UserCreation;
import com.mycompany.notesmanagement.controllers.UserSession;
import com.mycompany.notesmanagement.dialogs.DatabaseError;
import com.mycompany.notesmanagement.dialogs.SignUpSuccessForm;
import com.mycompany.notesmanagement.models.User;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.Border;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.JTextComponent;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author Regine Torremoro
 */
public class SignUpSecondLevel extends javax.swing.JFrame {

    /**
     * Creates new form SignUpSecondLevel
     */
    private int id;
    private final String email;
    private String password;
    private File profilePicture = null;
    private boolean isProfilePictureUploaded = false;
    private File selectedImage;

    private final DatabaseConnector database;

    public SignUpSecondLevel(User userDetails) {

        this.email = userDetails.getEmail();
        this.password = userDetails.getPassword();

        database = new DatabaseConnector();

        initComponents();

        setLocationRelativeTo(null);

        Border border = BorderFactory.createLineBorder(new Color(0, 31, 63), 2, true);

        firstNameInput.setBorder(border);
        lastNameInput.setBorder(border);
        usernameInput.setBorder(border);

        firstNameErrorLabel.setVisible(false);
        lastNameErrorLabel.setVisible(false);
        usernameErrorLabel.setVisible(false);

        attachDocumentListeners();

    }

    /**
     *
     * @param filePath
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        imageUpload = new javax.swing.JFileChooser();
        parentPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        leftInnerPanel = new javax.swing.JPanel();
        logoPanel = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        tagline = new javax.swing.JLabel();
        modelPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        rightInnerPanel = new javax.swing.JPanel();
        signUpPanel = new javax.swing.JPanel();
        signUpText = new javax.swing.JLabel();
        signUpInstructions = new javax.swing.JLabel();
        formPanel = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameInput = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameInput = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        genderOptions = new javax.swing.JComboBox<>();
        usernameLabel = new javax.swing.JLabel();
        usernameInput = new javax.swing.JTextField();
        firstNameErrorLabel = new javax.swing.JLabel();
        lastNameErrorLabel = new javax.swing.JLabel();
        usernameErrorLabel = new javax.swing.JLabel();
        signUpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Note Forge - Sign Up");
        setMinimumSize(new java.awt.Dimension(1000, 520));
        setPreferredSize(new java.awt.Dimension(1000, 520));
        setResizable(false);
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        parentPanel.setBackground(java.awt.Color.white);
        parentPanel.setMinimumSize(new java.awt.Dimension(1000, 500));
        parentPanel.setLayout(new java.awt.GridBagLayout());

        leftPanel.setBackground(new java.awt.Color(150, 189, 232));
        leftPanel.setMinimumSize(new java.awt.Dimension(500, 450));
        leftPanel.setPreferredSize(new java.awt.Dimension(500, 450));
        leftPanel.setLayout(new java.awt.GridBagLayout());

        leftInnerPanel.setBackground(new java.awt.Color(170, 209, 252));
        leftInnerPanel.setMinimumSize(new java.awt.Dimension(500, 450));
        leftInnerPanel.setOpaque(false);
        leftInnerPanel.setPreferredSize(new java.awt.Dimension(500, 450));
        leftInnerPanel.setLayout(new java.awt.GridBagLayout());

        logoPanel.setOpaque(false);
        logoPanel.setPreferredSize(new java.awt.Dimension(100, 30));
        logoPanel.setLayout(new java.awt.GridBagLayout());

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoSmall.png"))); // NOI18N
        logoPanel.add(logo, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        leftInnerPanel.add(logoPanel, gridBagConstraints);

        tagline.setFont(new java.awt.Font("Poppins", 1, 22)); // NOI18N
        tagline.setForeground(new java.awt.Color(0, 0, 0));
        tagline.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tagline.setText("<html><div style='text-align: center;'><p>Craft your ideas and elevate</p><p style='margin: -10 0 0 0;'>your note-taking to the next level.</p></div></html>");
        tagline.setMaximumSize(new java.awt.Dimension(400, 65));
        tagline.setMinimumSize(new java.awt.Dimension(400, 65));
        tagline.setPreferredSize(new java.awt.Dimension(400, 65));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        leftInnerPanel.add(tagline, gridBagConstraints);

        modelPanel.setOpaque(false);
        modelPanel.setPreferredSize(new java.awt.Dimension(300, 260));
        modelPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/boyTyping.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        modelPanel.add(jLabel1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        leftInnerPanel.add(modelPanel, gridBagConstraints);

        leftPanel.add(leftInnerPanel, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        parentPanel.add(leftPanel, gridBagConstraints);

        rightPanel.setBackground(java.awt.Color.white);
        rightPanel.setMinimumSize(new java.awt.Dimension(500, 450));
        rightPanel.setPreferredSize(new java.awt.Dimension(500, 450));
        rightPanel.setLayout(new java.awt.GridBagLayout());

        rightInnerPanel.setBackground(java.awt.Color.white);
        rightInnerPanel.setMinimumSize(new java.awt.Dimension(500, 450));
        rightInnerPanel.setPreferredSize(new java.awt.Dimension(500, 450));
        rightInnerPanel.setLayout(new java.awt.GridBagLayout());

        signUpPanel.setBackground(java.awt.Color.white);
        signUpPanel.setMinimumSize(new java.awt.Dimension(500, 450));
        signUpPanel.setPreferredSize(new java.awt.Dimension(500, 450));
        signUpPanel.setLayout(new java.awt.GridBagLayout());

        signUpText.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        signUpText.setForeground(java.awt.Color.black);
        signUpText.setText("Sign Up");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(-10, 0, 0, 0);
        signUpPanel.add(signUpText, gridBagConstraints);

        signUpInstructions.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        signUpInstructions.setForeground(java.awt.Color.black);
        signUpInstructions.setText("Please enter the required details for your new account.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        signUpPanel.add(signUpInstructions, gridBagConstraints);

        formPanel.setOpaque(false);
        formPanel.setPreferredSize(new java.awt.Dimension(200, 200));
        formPanel.setPreferredSize(new java.awt.Dimension(300, 340));
        formPanel.setLayout(new java.awt.GridBagLayout());

        firstNameLabel.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        firstNameLabel.setForeground(java.awt.Color.black);
        firstNameLabel.setText("First Name");
        firstNameLabel.setPreferredSize(new java.awt.Dimension(55, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        formPanel.add(firstNameLabel, gridBagConstraints);

        firstNameInput.setBackground(java.awt.Color.white);
        firstNameInput.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        firstNameInput.setForeground(java.awt.Color.black);
        firstNameInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 31, 63), 2, true));
        firstNameInput.setPreferredSize(new java.awt.Dimension(70, 30));
        firstNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameInputActionPerformed(evt);
            }
        });
        firstNameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstNameInputKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        formPanel.add(firstNameInput, gridBagConstraints);

        lastNameLabel.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        lastNameLabel.setForeground(java.awt.Color.black);
        lastNameLabel.setText("Last Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        formPanel.add(lastNameLabel, gridBagConstraints);

        lastNameInput.setBackground(java.awt.Color.white);
        lastNameInput.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        lastNameInput.setForeground(java.awt.Color.black);
        lastNameInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 31, 63), 2, true));
        lastNameInput.setPreferredSize(new java.awt.Dimension(70, 30));
        lastNameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lastNameInputKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        formPanel.add(lastNameInput, gridBagConstraints);

        genderLabel.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        genderLabel.setForeground(java.awt.Color.black);
        genderLabel.setText("Gender");
        genderLabel.setPreferredSize(new java.awt.Dimension(40, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        formPanel.add(genderLabel, gridBagConstraints);

        genderOptions.setBackground(java.awt.Color.white);
        genderOptions.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        genderOptions.setForeground(java.awt.Color.black);
        genderOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Non-binary", "Prefer not to say" }));
        genderOptions.setPreferredSize(new java.awt.Dimension(72, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        formPanel.add(genderOptions, gridBagConstraints);

        usernameLabel.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        usernameLabel.setForeground(java.awt.Color.black);
        usernameLabel.setText("Username");
        usernameLabel.setPreferredSize(new java.awt.Dimension(55, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        formPanel.add(usernameLabel, gridBagConstraints);

        usernameInput.setBackground(java.awt.Color.white);
        usernameInput.setFont(new java.awt.Font("Poppins", 0, 10)); // NOI18N
        usernameInput.setForeground(java.awt.Color.black);
        usernameInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 31, 63), 2, true));
        usernameInput.setPreferredSize(new java.awt.Dimension(70, 30));
        usernameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameInputKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        formPanel.add(usernameInput, gridBagConstraints);

        firstNameErrorLabel.setFont(new java.awt.Font("Poppins", 0, 9)); // NOI18N
        firstNameErrorLabel.setForeground(java.awt.Color.red);
        firstNameErrorLabel.setText("Please enter your first name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(firstNameErrorLabel, gridBagConstraints);

        lastNameErrorLabel.setFont(new java.awt.Font("Poppins", 0, 9)); // NOI18N
        lastNameErrorLabel.setForeground(java.awt.Color.red);
        lastNameErrorLabel.setText("Please enter your last name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(lastNameErrorLabel, gridBagConstraints);

        usernameErrorLabel.setFont(new java.awt.Font("Poppins", 0, 9)); // NOI18N
        usernameErrorLabel.setForeground(java.awt.Color.red);
        usernameErrorLabel.setText("Please enter a username");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(usernameErrorLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        signUpPanel.add(formPanel, gridBagConstraints);

        signUpButton.setBackground(new java.awt.Color(0, 31, 63));
        signUpButton.setFont(new java.awt.Font("Poppins", 1, 10)); // NOI18N
        signUpButton.setForeground(java.awt.Color.white);
        signUpButton.setText("Sign up");
        signUpButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        signUpButton.setPreferredSize(new java.awt.Dimension(300, 30));
        signUpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signUpButtonMouseClicked(evt);
            }
        });
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        signUpPanel.add(signUpButton, gridBagConstraints);

        rightInnerPanel.add(signUpPanel, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        rightPanel.add(rightInnerPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        parentPanel.add(rightPanel, gridBagConstraints);

        getContentPane().add(parentPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateBorderColor(JTextComponent component, boolean isError) {

        Border border;
        if (isError) {
            border = BorderFactory.createLineBorder(Color.RED, 2, true);
        } else {
            border = BorderFactory.createLineBorder(new Color(0, 31, 63), 2, true);
        }

        component.setBorder(border);

    }

    private void attachDocumentListeners() {
        firstNameInput.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                areFieldsValidated();
            }
        });

        lastNameInput.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                areFieldsValidated();
            }
        });

        usernameInput.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                areFieldsValidated();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                areFieldsValidated();
            }
        });

    }

    private boolean areFieldsValidated() {
        String firstName = firstNameInput.getText();
        String lastName = lastNameInput.getText();
        String username = usernameInput.getText();

        String allowedCharactersForUsername = "^[a-zA-Z0-9_]*$";

        boolean firstNameValid = !firstName.isEmpty();
        boolean lastNameValid = !lastName.isEmpty();
        boolean usernameValid = true;
        boolean isUsernameFree = !isUsernameTaken(username);

        firstNameErrorLabel.setVisible(!firstNameValid);
        lastNameErrorLabel.setVisible(!lastNameValid);
        usernameErrorLabel.setVisible(!usernameValid);

        updateBorderColor(firstNameInput, !firstNameValid);
        updateBorderColor(lastNameInput, !lastNameValid);
        updateBorderColor(usernameInput, !usernameValid);

        firstNameErrorLabel.setVisible(!firstNameValid);
        lastNameErrorLabel.setVisible(!lastNameValid);

        if (!isUsernameFree) {
            usernameErrorLabel.setVisible(true);
            usernameErrorLabel.setText("Username taken. Please try a different one");
            usernameValid = false;
            updateBorderColor(usernameInput, true);
        }

        if (username.length() < 3) {
            usernameErrorLabel.setVisible(true);
            usernameErrorLabel.setText("Invalid username");
            usernameValid = false;
            updateBorderColor(usernameInput, true);
        }

        if (!username.matches(allowedCharactersForUsername)) {
            usernameErrorLabel.setVisible(true);
            usernameErrorLabel.setText("Invalid character found. Please try again.");
            usernameValid = false;
            updateBorderColor(usernameInput, true);
        }

        if (username.isEmpty()) {
            usernameErrorLabel.setVisible(true);
            usernameErrorLabel.setText("Please enter a username");
            usernameValid = false;
            updateBorderColor(usernameInput, true);
        }

        return firstNameValid && lastNameValid && usernameValid && isUsernameFree;
    }

    public boolean isUsernameTaken(String username) {

        ResultSet resultSet = null;
        PreparedStatement statement = null;

        try {
            database.connect();
            String query = "SELECT COUNT(*) FROM users WHERE user_username = ?";
            statement = database.getConnection().prepareStatement(query);
            statement.setString(1, username);
            resultSet = statement.executeQuery();

            if (resultSet.next()) {
                int count = resultSet.getInt(1);
                return count > 0;
            }

        } catch (SQLException e) {
            new DatabaseError().setVisible(true);
            return true;
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }
                database.close();
            } catch (SQLException ex) {
                new DatabaseError().setVisible(true);
                return true;
            }
        }

        return true;

    }

    private String hashPassword(String password) {
        String salt = BCrypt.gensalt();
        return BCrypt.hashpw(password, salt);
    }

    private void addUserToDatabase() {

        if (areFieldsValidated()) {

            String firstName = firstNameInput.getText();
            String lastName = lastNameInput.getText();
            String username = usernameInput.getText();
            String gender = (String) genderOptions.getSelectedItem();

            this.password = hashPassword(this.password);

            User userFullDetails = new User(id, username, password, email, firstName, lastName, gender, profilePicture);

            UserCreation userCreation = new UserCreation(userFullDetails);
            userCreation.insertValuesToDatabase();

            UserSession session = UserSession.getInstance();
            session.logout();
            session.setUserId(id);
        }

    }

    public boolean isImageValid(File image) {

        if (image == null) {
            return false;
        }

        if (!image.exists()) {
            return false;
        }

        if (!image.isFile()) {
            return false;
        }

        long fileSizeInBytes = image.length();
        long fileSizeInMB = fileSizeInBytes / (1024 * 1024);
        return fileSizeInMB <= 16;

    }

    private void setProfilePicture() {

        if (isProfilePictureUploaded) {
            if (isImageValid(selectedImage)) {
                profilePicture = selectedImage;
            } else {
                setDefaultProfilePicture();
            }
        } else {
            setDefaultProfilePicture();
        }

    }

    private File getDefaultProfilePicture() {
        String imagePath = "/images/user.jpg";
        return new File(getClass().getResource(imagePath).getFile());
    }

    private void setDefaultProfilePicture() {

        try {
            File imageFile = getDefaultProfilePicture();
            if (imageFile.exists()) {
                profilePicture = imageFile;
            } else {
                JOptionPane.showMessageDialog(this, "Default image file not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Error loading default image: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void proceedToDestination() {
        if (areFieldsValidated()) {
            setProfilePicture();

            addUserToDatabase();

            new SignUpSuccessForm().setVisible(true);
            this.dispose();
        }
    }

    private void firstNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameInputActionPerformed

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_signUpButtonActionPerformed

    private void firstNameInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            proceedToDestination();
        }
    }//GEN-LAST:event_firstNameInputKeyPressed

    private void lastNameInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            proceedToDestination();
        }
    }//GEN-LAST:event_lastNameInputKeyPressed

    private void usernameInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            proceedToDestination();
        }
    }//GEN-LAST:event_usernameInputKeyPressed

    private void signUpButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUpButtonMouseClicked
        // TODO add your handling code here:
        proceedToDestination();
    }//GEN-LAST:event_signUpButtonMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel firstNameErrorLabel;
    private javax.swing.JTextField firstNameInput;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JPanel formPanel;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JComboBox<String> genderOptions;
    private javax.swing.JFileChooser imageUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lastNameErrorLabel;
    private javax.swing.JTextField lastNameInput;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JPanel leftInnerPanel;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel logo;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JPanel modelPanel;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JPanel rightInnerPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JButton signUpButton;
    private javax.swing.JLabel signUpInstructions;
    private javax.swing.JPanel signUpPanel;
    private javax.swing.JLabel signUpText;
    private javax.swing.JLabel tagline;
    private javax.swing.JLabel usernameErrorLabel;
    private javax.swing.JTextField usernameInput;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
